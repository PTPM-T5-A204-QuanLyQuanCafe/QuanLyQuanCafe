#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_CAFFE")]
	public partial class QL_COFFEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAN(BAN instance);
    partial void UpdateBAN(BAN instance);
    partial void DeleteBAN(BAN instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertCONTENT(CONTENT instance);
    partial void UpdateCONTENT(CONTENT instance);
    partial void DeleteCONTENT(CONTENT instance);
    partial void InsertCTHOADON(CTHOADON instance);
    partial void UpdateCTHOADON(CTHOADON instance);
    partial void DeleteCTHOADON(CTHOADON instance);
    partial void InsertCHITIETPHEUNHAP(CHITIETPHEUNHAP instance);
    partial void UpdateCHITIETPHEUNHAP(CHITIETPHEUNHAP instance);
    partial void DeleteCHITIETPHEUNHAP(CHITIETPHEUNHAP instance);
    partial void InsertCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void UpdateCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void DeleteCHITIETPHIEUDAT(CHITIETPHIEUDAT instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHOHANG(KHOHANG instance);
    partial void UpdateKHOHANG(KHOHANG instance);
    partial void DeleteKHOHANG(KHOHANG instance);
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    partial void InsertNOIDUNG(NOIDUNG instance);
    partial void UpdateNOIDUNG(NOIDUNG instance);
    partial void DeleteNOIDUNG(NOIDUNG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANLOAI(PHANLOAI instance);
    partial void UpdatePHANLOAI(PHANLOAI instance);
    partial void DeletePHANLOAI(PHANLOAI instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUDATBAN(PHIEUDATBAN instance);
    partial void UpdatePHIEUDATBAN(PHIEUDATBAN instance);
    partial void DeletePHIEUDATBAN(PHIEUDATBAN instance);
    #endregion
		
		public QL_COFFEDataContext() : 
				base(global::BLL_DAL.Properties.Settings.Default.DB_CAFFEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_COFFEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_COFFEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_COFFEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_COFFEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAN> BANs
		{
			get
			{
				return this.GetTable<BAN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CONTENT> CONTENTs
		{
			get
			{
				return this.GetTable<CONTENT>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADON> CTHOADONs
		{
			get
			{
				return this.GetTable<CTHOADON>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHEUNHAP> CHITIETPHEUNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPHEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHOHANG> KHOHANGs
		{
			get
			{
				return this.GetTable<KHOHANG>();
			}
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
		
		public System.Data.Linq.Table<NOIDUNG> NOIDUNGs
		{
			get
			{
				return this.GetTable<NOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANLOAI> PHANLOAIs
		{
			get
			{
				return this.GetTable<PHANLOAI>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDATBAN> PHIEUDATBANs
		{
			get
			{
				return this.GetTable<PHIEUDATBAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAN")]
	public partial class BAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENBAN;
		
		private System.Nullable<int> _SLMAX;
		
		private string _TINHTRANG;
		
		private EntitySet<CHITIETPHIEUDAT> _CHITIETPHIEUDATs;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENBANChanging(string value);
    partial void OnTENBANChanged();
    partial void OnSLMAXChanging(System.Nullable<int> value);
    partial void OnSLMAXChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public BAN()
		{
			this._CHITIETPHIEUDATs = new EntitySet<CHITIETPHIEUDAT>(new Action<CHITIETPHIEUDAT>(this.attach_CHITIETPHIEUDATs), new Action<CHITIETPHIEUDAT>(this.detach_CHITIETPHIEUDATs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBAN", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENBAN
		{
			get
			{
				return this._TENBAN;
			}
			set
			{
				if ((this._TENBAN != value))
				{
					this.OnTENBANChanging(value);
					this.SendPropertyChanging();
					this._TENBAN = value;
					this.SendPropertyChanged("TENBAN");
					this.OnTENBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLMAX", DbType="Int")]
		public System.Nullable<int> SLMAX
		{
			get
			{
				return this._SLMAX;
			}
			set
			{
				if ((this._SLMAX != value))
				{
					this.OnSLMAXChanging(value);
					this.SendPropertyChanging();
					this._SLMAX = value;
					this.SendPropertyChanged("SLMAX");
					this.OnSLMAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_CHITIETPHIEUDAT", Storage="_CHITIETPHIEUDATs", ThisKey="TENBAN", OtherKey="TENBAN")]
		public EntitySet<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this._CHITIETPHIEUDATs;
			}
			set
			{
				this._CHITIETPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADON", Storage="_HOADONs", ThisKey="TENBAN", OtherKey="TENBAN")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.BAN = this;
		}
		
		private void detach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.BAN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BAN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEU;
		
		private string _SDT;
		
		private string _SODIENTHOAINCC;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTIEN;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private EntitySet<CHITIETPHEUNHAP> _CHITIETPHEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(string value);
    partial void OnMAPHIEUChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnSODIENTHOAINCCChanging(string value);
    partial void OnSODIENTHOAINCCChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPHEUNHAPs = new EntitySet<CHITIETPHEUNHAP>(new Action<CHITIETPHEUNHAP>(this.attach_CHITIETPHEUNHAPs), new Action<CHITIETPHEUNHAP>(this.detach_CHITIETPHEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAINCC", DbType="VarChar(11)")]
		public string SODIENTHOAINCC
		{
			get
			{
				return this._SODIENTHOAINCC;
			}
			set
			{
				if ((this._SODIENTHOAINCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSODIENTHOAINCCChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAINCC = value;
					this.SendPropertyChanged("SODIENTHOAINCC");
					this.OnSODIENTHOAINCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHEUNHAP", Storage="_CHITIETPHEUNHAPs", ThisKey="MAPHIEU", OtherKey="MAPHIEU")]
		public EntitySet<CHITIETPHEUNHAP> CHITIETPHEUNHAPs
		{
			get
			{
				return this._CHITIETPHEUNHAPs;
			}
			set
			{
				this._CHITIETPHEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="SODIENTHOAINCC", OtherKey="SODIENTHOAINCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._SODIENTHOAINCC = value.SODIENTHOAINCC;
					}
					else
					{
						this._SODIENTHOAINCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="SDT", OtherKey="SDT", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._SDT = value.SDT;
					}
					else
					{
						this._SDT = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHEUNHAPs(CHITIETPHEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPHEUNHAPs(CHITIETPHEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTENT")]
	public partial class CONTENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACT;
		
		private string _TIEUDE;
		
		private System.Nullable<System.DateTime> _NGAYDANG;
		
		private string _ANH;
		
		private string _MOTA;
		
		private EntitySet<NOIDUNG> _NOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTChanging(string value);
    partial void OnMACTChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNGAYDANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDANGChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    #endregion
		
		public CONTENT()
		{
			this._NOIDUNGs = new EntitySet<NOIDUNG>(new Action<NOIDUNG>(this.attach_NOIDUNGs), new Action<NOIDUNG>(this.detach_NOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACT
		{
			get
			{
				return this._MACT;
			}
			set
			{
				if ((this._MACT != value))
				{
					this.OnMACTChanging(value);
					this.SendPropertyChanging();
					this._MACT = value;
					this.SendPropertyChanged("MACT");
					this.OnMACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(100)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDANG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDANG
		{
			get
			{
				return this._NGAYDANG;
			}
			set
			{
				if ((this._NGAYDANG != value))
				{
					this.OnNGAYDANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYDANG = value;
					this.SendPropertyChanged("NGAYDANG");
					this.OnNGAYDANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(20)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(500)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENT_NOIDUNG", Storage="_NOIDUNGs", ThisKey="MACT", OtherKey="MACT")]
		public EntitySet<NOIDUNG> NOIDUNGs
		{
			get
			{
				return this._NOIDUNGs;
			}
			set
			{
				this._NOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOIDUNGs(NOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.CONTENT = this;
		}
		
		private void detach_NOIDUNGs(NOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.CONTENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADON")]
	public partial class CTHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _SOTIEN;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<MENU> _MENU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnSOTIENChanging(System.Nullable<double> value);
    partial void OnSOTIENChanged();
    #endregion
		
		public CTHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._MENU = default(EntityRef<MENU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._MENU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEN", DbType="Float")]
		public System.Nullable<double> SOTIEN
		{
			get
			{
				return this._SOTIEN;
			}
			set
			{
				if ((this._SOTIEN != value))
				{
					this.OnSOTIENChanging(value);
					this.SendPropertyChanging();
					this._SOTIEN = value;
					this.SendPropertyChanged("SOTIEN");
					this.OnSOTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_CTHOADON", Storage="_MENU", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public MENU MENU
		{
			get
			{
				return this._MENU.Entity;
			}
			set
			{
				MENU previousValue = this._MENU.Entity;
				if (((previousValue != value) 
							|| (this._MENU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENU.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._MENU.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("MENU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHEUNHAP")]
	public partial class CHITIETPHEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEU;
		
		private string _MAHANG;
		
		private System.Nullable<double> _GIA;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<KHOHANG> _KHOHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(string value);
    partial void OnMAPHIEUChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETPHEUNHAP()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._KHOHANG = default(EntityRef<KHOHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._KHOHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHEUNHAP", Storage="_PHIEUNHAP", ThisKey="MAPHIEU", OtherKey="MAPHIEU", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPHEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHEUNHAPs.Add(this);
						this._MAPHIEU = value.MAPHIEU;
					}
					else
					{
						this._MAPHIEU = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOHANG_CHITIETPHEUNHAP", Storage="_KHOHANG", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public KHOHANG KHOHANG
		{
			get
			{
				return this._KHOHANG.Entity;
			}
			set
			{
				KHOHANG previousValue = this._KHOHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHOHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOHANG.Entity = null;
						previousValue.CHITIETPHEUNHAPs.Remove(this);
					}
					this._KHOHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHEUNHAPs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("KHOHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUDAT")]
	public partial class CHITIETPHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUDAT;
		
		private string _TENBAN;
		
		private EntityRef<BAN> _BAN;
		
		private EntityRef<PHIEUDATBAN> _PHIEUDATBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUDATChanging(string value);
    partial void OnMAPHIEUDATChanged();
    partial void OnTENBANChanging(string value);
    partial void OnTENBANChanged();
    #endregion
		
		public CHITIETPHIEUDAT()
		{
			this._BAN = default(EntityRef<BAN>);
			this._PHIEUDATBAN = default(EntityRef<PHIEUDATBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDAT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDAT
		{
			get
			{
				return this._MAPHIEUDAT;
			}
			set
			{
				if ((this._MAPHIEUDAT != value))
				{
					if (this._PHIEUDATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUDATChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDAT = value;
					this.SendPropertyChanged("MAPHIEUDAT");
					this.OnMAPHIEUDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBAN", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENBAN
		{
			get
			{
				return this._TENBAN;
			}
			set
			{
				if ((this._TENBAN != value))
				{
					if (this._BAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENBANChanging(value);
					this.SendPropertyChanging();
					this._TENBAN = value;
					this.SendPropertyChanged("TENBAN");
					this.OnTENBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_CHITIETPHIEUDAT", Storage="_BAN", ThisKey="TENBAN", OtherKey="TENBAN", IsForeignKey=true)]
		public BAN BAN
		{
			get
			{
				return this._BAN.Entity;
			}
			set
			{
				BAN previousValue = this._BAN.Entity;
				if (((previousValue != value) 
							|| (this._BAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN.Entity = null;
						previousValue.CHITIETPHIEUDATs.Remove(this);
					}
					this._BAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUDATs.Add(this);
						this._TENBAN = value.TENBAN;
					}
					else
					{
						this._TENBAN = default(string);
					}
					this.SendPropertyChanged("BAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATBAN_CHITIETPHIEUDAT", Storage="_PHIEUDATBAN", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT", IsForeignKey=true)]
		public PHIEUDATBAN PHIEUDATBAN
		{
			get
			{
				return this._PHIEUDATBAN.Entity;
			}
			set
			{
				PHIEUDATBAN previousValue = this._PHIEUDATBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDATBAN.Entity = null;
						previousValue.CHITIETPHIEUDATs.Remove(this);
					}
					this._PHIEUDATBAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUDATs.Add(this);
						this._MAPHIEUDAT = value.MAPHIEUDAT;
					}
					else
					{
						this._MAPHIEUDAT = default(string);
					}
					this.SendPropertyChanged("PHIEUDATBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _TENBAN;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<System.DateTime> _GIODEN;
		
		private System.Nullable<System.DateTime> _GIODI;
		
		private System.Nullable<double> _TONGTIEN;
		
		private string _TINHTRANG;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntityRef<BAN> _BAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnTENBANChanging(string value);
    partial void OnTENBANChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnGIODENChanging(System.Nullable<System.DateTime> value);
    partial void OnGIODENChanged();
    partial void OnGIODIChanging(System.Nullable<System.DateTime> value);
    partial void OnGIODIChanged();
    partial void OnTONGTIENChanging(System.Nullable<double> value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._BAN = default(EntityRef<BAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBAN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENBAN
		{
			get
			{
				return this._TENBAN;
			}
			set
			{
				if ((this._TENBAN != value))
				{
					if (this._BAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENBANChanging(value);
					this.SendPropertyChanging();
					this._TENBAN = value;
					this.SendPropertyChanged("TENBAN");
					this.OnTENBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIODEN", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIODEN
		{
			get
			{
				return this._GIODEN;
			}
			set
			{
				if ((this._GIODEN != value))
				{
					this.OnGIODENChanging(value);
					this.SendPropertyChanging();
					this._GIODEN = value;
					this.SendPropertyChanged("GIODEN");
					this.OnGIODENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIODI", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIODI
		{
			get
			{
				return this._GIODI;
			}
			set
			{
				if ((this._GIODI != value))
				{
					this.OnGIODIChanging(value);
					this.SendPropertyChanging();
					this._GIODI = value;
					this.SendPropertyChanged("GIODI");
					this.OnGIODIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Float")]
		public System.Nullable<double> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_CTHOADONs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAN_HOADON", Storage="_BAN", ThisKey="TENBAN", OtherKey="TENBAN", IsForeignKey=true)]
		public BAN BAN
		{
			get
			{
				return this._BAN.Entity;
			}
			set
			{
				BAN previousValue = this._BAN.Entity;
				if (((previousValue != value) 
							|| (this._BAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._BAN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._TENBAN = value.TENBAN;
					}
					else
					{
						this._TENBAN = default(string);
					}
					this.SendPropertyChanged("BAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="SDT", OtherKey="SDT", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._SDT = value.SDT;
					}
					else
					{
						this._SDT = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SDTKH;
		
		private string _HOTEN;
		
		private string _EMAIL;
		
		private string _DIACHI;
		
		private string _PASSKH;
		
		private EntitySet<PHIEUDATBAN> _PHIEUDATBANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnPASSKHChanging(string value);
    partial void OnPASSKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._PHIEUDATBANs = new EntitySet<PHIEUDATBAN>(new Action<PHIEUDATBAN>(this.attach_PHIEUDATBANs), new Action<PHIEUDATBAN>(this.detach_PHIEUDATBANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSKH", DbType="VarChar(15)")]
		public string PASSKH
		{
			get
			{
				return this._PASSKH;
			}
			set
			{
				if ((this._PASSKH != value))
				{
					this.OnPASSKHChanging(value);
					this.SendPropertyChanging();
					this._PASSKH = value;
					this.SendPropertyChanged("PASSKH");
					this.OnPASSKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUDATBAN", Storage="_PHIEUDATBANs", ThisKey="SDTKH", OtherKey="SDTKH")]
		public EntitySet<PHIEUDATBAN> PHIEUDATBANs
		{
			get
			{
				return this._PHIEUDATBANs;
			}
			set
			{
				this._PHIEUDATBANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATBANs(PHIEUDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUDATBANs(PHIEUDATBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOHANG")]
	public partial class KHOHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHANG;
		
		private string _TENHANG;
		
		private string _DVT;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<double> _GIA;
		
		private string _TINHTRANG;
		
		private EntitySet<CHITIETPHEUNHAP> _CHITIETPHEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public KHOHANG()
		{
			this._CHITIETPHEUNHAPs = new EntitySet<CHITIETPHEUNHAP>(new Action<CHITIETPHEUNHAP>(this.attach_CHITIETPHEUNHAPs), new Action<CHITIETPHEUNHAP>(this.detach_CHITIETPHEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(30)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(20)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOHANG_CHITIETPHEUNHAP", Storage="_CHITIETPHEUNHAPs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<CHITIETPHEUNHAP> CHITIETPHEUNHAPs
		{
			get
			{
				return this._CHITIETPHEUNHAPs;
			}
			set
			{
				this._CHITIETPHEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHEUNHAPs(CHITIETPHEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KHOHANG = this;
		}
		
		private void detach_CHITIETPHEUNHAPs(CHITIETPHEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KHOHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _TENLOAI;
		
		private string _TENSP;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _DVT;
		
		private System.Nullable<double> _GIA;
		
		private string _ANH;
		
		private string _TINHTRANG;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntityRef<PHANLOAI> _PHANLOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public MENU()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._PHANLOAI = default(EntityRef<PHANLOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(30)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					if (this._PHANLOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(30)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(30)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="VarChar(30)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_CTHOADON", Storage="_CTHOADONs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANLOAI_MENU", Storage="_PHANLOAI", ThisKey="TENLOAI", OtherKey="TENLOAI", IsForeignKey=true)]
		public PHANLOAI PHANLOAI
		{
			get
			{
				return this._PHANLOAI.Entity;
			}
			set
			{
				PHANLOAI previousValue = this._PHANLOAI.Entity;
				if (((previousValue != value) 
							|| (this._PHANLOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANLOAI.Entity = null;
						previousValue.MENUs.Remove(this);
					}
					this._PHANLOAI.Entity = value;
					if ((value != null))
					{
						value.MENUs.Add(this);
						this._TENLOAI = value.TENLOAI;
					}
					else
					{
						this._TENLOAI = default(string);
					}
					this.SendPropertyChanged("PHANLOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MENU = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MENU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NOIDUNG")]
	public partial class NOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACT;
		
		private string _MAND;
		
		private string _NOIDUNG1;
		
		private string _ANH;
		
		private string _HEADING;
		
		private EntityRef<CONTENT> _CONTENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTChanging(string value);
    partial void OnMACTChanged();
    partial void OnMANDChanging(string value);
    partial void OnMANDChanged();
    partial void OnNOIDUNG1Changing(string value);
    partial void OnNOIDUNG1Changed();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnHEADINGChanging(string value);
    partial void OnHEADINGChanged();
    #endregion
		
		public NOIDUNG()
		{
			this._CONTENT = default(EntityRef<CONTENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACT", DbType="VarChar(10)")]
		public string MACT
		{
			get
			{
				return this._MACT;
			}
			set
			{
				if ((this._MACT != value))
				{
					if (this._CONTENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACTChanging(value);
					this.SendPropertyChanging();
					this._MACT = value;
					this.SendPropertyChanged("MACT");
					this.OnMACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAND", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAND
		{
			get
			{
				return this._MAND;
			}
			set
			{
				if ((this._MAND != value))
				{
					this.OnMANDChanging(value);
					this.SendPropertyChanging();
					this._MAND = value;
					this.SendPropertyChanged("MAND");
					this.OnMANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NOIDUNG", Storage="_NOIDUNG1", DbType="NVarChar(MAX)")]
		public string NOIDUNG1
		{
			get
			{
				return this._NOIDUNG1;
			}
			set
			{
				if ((this._NOIDUNG1 != value))
				{
					this.OnNOIDUNG1Changing(value);
					this.SendPropertyChanging();
					this._NOIDUNG1 = value;
					this.SendPropertyChanged("NOIDUNG1");
					this.OnNOIDUNG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="VarChar(20)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HEADING", DbType="NVarChar(100)")]
		public string HEADING
		{
			get
			{
				return this._HEADING;
			}
			set
			{
				if ((this._HEADING != value))
				{
					this.OnHEADINGChanging(value);
					this.SendPropertyChanging();
					this._HEADING = value;
					this.SendPropertyChanged("HEADING");
					this.OnHEADINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTENT_NOIDUNG", Storage="_CONTENT", ThisKey="MACT", OtherKey="MACT", IsForeignKey=true)]
		public CONTENT CONTENT
		{
			get
			{
				return this._CONTENT.Entity;
			}
			set
			{
				CONTENT previousValue = this._CONTENT.Entity;
				if (((previousValue != value) 
							|| (this._CONTENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTENT.Entity = null;
						previousValue.NOIDUNGs.Remove(this);
					}
					this._CONTENT.Entity = value;
					if ((value != null))
					{
						value.NOIDUNGs.Add(this);
						this._MACT = value.MACT;
					}
					else
					{
						this._MACT = default(string);
					}
					this.SendPropertyChanged("CONTENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SODIENTHOAINCC;
		
		private string _TENNHACC;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSODIENTHOAINCCChanging(string value);
    partial void OnSODIENTHOAINCCChanged();
    partial void OnTENNHACCChanging(string value);
    partial void OnTENNHACCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAINCC", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SODIENTHOAINCC
		{
			get
			{
				return this._SODIENTHOAINCC;
			}
			set
			{
				if ((this._SODIENTHOAINCC != value))
				{
					this.OnSODIENTHOAINCCChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAINCC = value;
					this.SendPropertyChanged("SODIENTHOAINCC");
					this.OnSODIENTHOAINCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHACC", DbType="NVarChar(100)")]
		public string TENNHACC
		{
			get
			{
				return this._TENNHACC;
			}
			set
			{
				if ((this._TENNHACC != value))
				{
					this.OnTENNHACCChanging(value);
					this.SendPropertyChanging();
					this._TENNHACC = value;
					this.SendPropertyChanged("TENNHACC");
					this.OnTENNHACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="SODIENTHOAINCC", OtherKey="SODIENTHOAINCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SDT;
		
		private string _MAQ;
		
		private string _HOTEN;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private string _PASSNV;
		
		private string _TINHTRANG;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMAQChanging(string value);
    partial void OnMAQChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSNVChanging(string value);
    partial void OnPASSNVChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQ", DbType="VarChar(10)")]
		public string MAQ
		{
			get
			{
				return this._MAQ;
			}
			set
			{
				if ((this._MAQ != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQChanging(value);
					this.SendPropertyChanging();
					this._MAQ = value;
					this.SendPropertyChanged("MAQ");
					this.OnMAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSNV", DbType="VarChar(15)")]
		public string PASSNV
		{
			get
			{
				return this._PASSNV;
			}
			set
			{
				if ((this._PASSNV != value))
				{
					this.OnPASSNVChanging(value);
					this.SendPropertyChanging();
					this._PASSNV = value;
					this.SendPropertyChanged("PASSNV");
					this.OnPASSNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="SDT", OtherKey="SDT")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="SDT", OtherKey="SDT")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_PHANQUYEN", ThisKey="MAQ", OtherKey="MAQ", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MAQ = value.MAQ;
					}
					else
					{
						this._MAQ = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANLOAI")]
	public partial class PHANLOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENLOAI;
		
		private string _MOTA;
		
		private EntitySet<MENU> _MENUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    #endregion
		
		public PHANLOAI()
		{
			this._MENUs = new EntitySet<MENU>(new Action<MENU>(this.attach_MENUs), new Action<MENU>(this.detach_MENUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(300)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANLOAI_MENU", Storage="_MENUs", ThisKey="TENLOAI", OtherKey="TENLOAI")]
		public EntitySet<MENU> MENUs
		{
			get
			{
				return this._MENUs;
			}
			set
			{
				this._MENUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MENUs(MENU entity)
		{
			this.SendPropertyChanging();
			entity.PHANLOAI = this;
		}
		
		private void detach_MENUs(MENU entity)
		{
			this.SendPropertyChanging();
			entity.PHANLOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAQ;
		
		private string _TENQ;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQChanging(string value);
    partial void OnMAQChanged();
    partial void OnTENQChanging(string value);
    partial void OnTENQChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQ", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAQ
		{
			get
			{
				return this._MAQ;
			}
			set
			{
				if ((this._MAQ != value))
				{
					this.OnMAQChanging(value);
					this.SendPropertyChanging();
					this._MAQ = value;
					this.SendPropertyChanged("MAQ");
					this.OnMAQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQ", DbType="NVarChar(30)")]
		public string TENQ
		{
			get
			{
				return this._TENQ;
			}
			set
			{
				if ((this._TENQ != value))
				{
					this.OnTENQChanging(value);
					this.SendPropertyChanging();
					this._TENQ = value;
					this.SendPropertyChanged("TENQ");
					this.OnTENQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAQ", OtherKey="MAQ")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDATBAN")]
	public partial class PHIEUDATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHIEUDAT;
		
		private string _SDTKH;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<System.DateTime> _GIODEN;
		
		private string _TINHTRANG;
		
		private System.Nullable<int> _SONGUOI;
		
		private EntitySet<CHITIETPHIEUDAT> _CHITIETPHIEUDATs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUDATChanging(string value);
    partial void OnMAPHIEUDATChanged();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnGIODENChanging(System.Nullable<System.DateTime> value);
    partial void OnGIODENChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnSONGUOIChanging(System.Nullable<int> value);
    partial void OnSONGUOIChanged();
    #endregion
		
		public PHIEUDATBAN()
		{
			this._CHITIETPHIEUDATs = new EntitySet<CHITIETPHIEUDAT>(new Action<CHITIETPHIEUDAT>(this.attach_CHITIETPHIEUDATs), new Action<CHITIETPHIEUDAT>(this.detach_CHITIETPHIEUDATs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUDAT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHIEUDAT
		{
			get
			{
				return this._MAPHIEUDAT;
			}
			set
			{
				if ((this._MAPHIEUDAT != value))
				{
					this.OnMAPHIEUDATChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUDAT = value;
					this.SendPropertyChanged("MAPHIEUDAT");
					this.OnMAPHIEUDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="VarChar(10)")]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIODEN", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIODEN
		{
			get
			{
				return this._GIODEN;
			}
			set
			{
				if ((this._GIODEN != value))
				{
					this.OnGIODENChanging(value);
					this.SendPropertyChanging();
					this._GIODEN = value;
					this.SendPropertyChanged("GIODEN");
					this.OnGIODENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGUOI", DbType="Int")]
		public System.Nullable<int> SONGUOI
		{
			get
			{
				return this._SONGUOI;
			}
			set
			{
				if ((this._SONGUOI != value))
				{
					this.OnSONGUOIChanging(value);
					this.SendPropertyChanging();
					this._SONGUOI = value;
					this.SendPropertyChanged("SONGUOI");
					this.OnSONGUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDATBAN_CHITIETPHIEUDAT", Storage="_CHITIETPHIEUDATs", ThisKey="MAPHIEUDAT", OtherKey="MAPHIEUDAT")]
		public EntitySet<CHITIETPHIEUDAT> CHITIETPHIEUDATs
		{
			get
			{
				return this._CHITIETPHIEUDATs;
			}
			set
			{
				this._CHITIETPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUDATBAN", Storage="_KHACHHANG", ThisKey="SDTKH", OtherKey="SDTKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUDATBANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATBANs.Add(this);
						this._SDTKH = value.SDTKH;
					}
					else
					{
						this._SDTKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATBAN = this;
		}
		
		private void detach_CHITIETPHIEUDATs(CHITIETPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDATBAN = null;
		}
	}
}
#pragma warning restore 1591
